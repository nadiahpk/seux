% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_CI_estimate.R
\name{get_CI_estimate}
\alias{get_CI_estimate}
\title{Get confidence intervals and estimates}
\usage{
get_CI_estimate(S, E, nreps = 10000, percentile = 95, U_T = 0,
  midP_fnc = NULL)
}
\arguments{
\item{S}{Vector of integers, the number of detected extant species at each timestep.}

\item{E}{Vector of integers, the number of detected extinct species at each timestep.}

\item{nreps}{Integer, the number of random samples of U bounds to take to calculate the CIs.
Default is 10000.}

\item{percentile}{Float [1,100], the percentile of the random sample of U bounds that
is used to calculate the CI.
Default is 95 (for a 95\% CI).}

\item{U_T}{Integer, the number of undetected extant species remaining at the end of the
timeseries. Typically an assumption. Default is 0.}

\item{midP_fnc}{Closure, a function to be used as the mid-P function.
Default will use central_hyper_midP, which is the mid-P function for the
central hypergeometric SEUX model.}
}
\value{
A data frame with 6 columns.
 \describe{
  \item{X_lo:}{Integers, the lower confidence bounds at each timestep on the number of undetected extinct species.}
  \item{X_hi:}{Integers, the upper confidence bounds at each timestep on the number of undetected extinct species.}
  \item{X_mean:}{Float, an estimate at each timestep of the number of undetected extinct species.}
  \item{U_lo:}{Integers, the lower confidence bounds at each timestep on the number of undetected extant species.}
  \item{U_hi:}{Integers, the upper confidence bounds at each timestep on the number of undetected extant species.}
  \item{U_mean:}{Float, an estimate at each timestep of the number of undetected extant species.}
 }
}
\description{
Obtains confidence intervals and for U and X using sampling
 of the mid-P function for the model (e.g. the central hypergeometric model)
}
\details{
This function uses a random sampling scheme to obtain a sample of U bound values
 at each timestep, through repeated calls to the function find_U0_bnd.
 The confidence intervals then approximated by taking percentiles of the sample.
 
 When this function is used in combination with a mid-P function, the random sampling
 scheme is equivalent to random sampling of fuzzy confidence bounds. Because the data
 is discrete, the coverage of the confidence intervals will not exactly match the nominal
 level, particularly when U is low (at the end of the timeseries). 

return( data.frame( X_lo=X_lo, X_hi=X_hi, X_mean=X_mean, U_lo=U_lo, U_hi=U_hi, U_mean=U_mean ) )
}
